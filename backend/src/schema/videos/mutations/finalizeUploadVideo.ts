import { GraphQLResolveInfo } from 'graphql'
import { Video } from '~/models/video.js'

interface FinalizeUploadVideoInput {
  key: string
  title: string
}

export default async function finalizeUploadVideo(
  _parent: unknown,
  input: FinalizeUploadVideoInput,
  _context: unknown,
  _info: GraphQLResolveInfo,
): Promise<Video> {
  // Simulate finalizing the upload and returning the video details
  await new Promise((resolve) => setTimeout(resolve, 100))

  return {
    id: input.key, // In a real implementation, this would be generated by the database
    title: input.title,
    description: 'Sample video description', // Placeholder value
    durationSec: 120, // Placeholder value
    playbackUrl: `http://example.com/playback/${input.key}`,
    thumbnailUrl: `http://example.com/thumbnail/${input.key}`,
    createdAt: new Date(), // Use ISO string for DateTime
    visibility: 'public', // Placeholder value
  }
}
